import pyfiglet
from rich.console import Console
from rich.text import Text
from telethon.sync import TelegramClient
from telethon.sessions import StringSession
from telethon.tl.functions.messages import GetHistoryRequest
import asyncio

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Telethon
api_id = 29459757  # –¢–≤–æ–π API ID
api_hash = '7cc969764c4de8a52169570ac20000a8'  # –¢–≤–æ–π API Hash
session_string = "1ApWapzMBu4Sbmc7c5s44pLQ22UEse-Uyc0U0xWkxcOshYoED_Fb71Sq54idI6hqSNWQVG_gCDQhnUQVAFd_fQMcbRbNWvmoqDM4uS02q-RTcvwQT3mDOGcabfPwYaPV8oXtHfNTOHHY8vukH6NP7gSUBA4itvhpGn74nC1SfngevCA_LfGpeoOtN_jZDMG_zlWtlpAHxlJl6w5zS7qIR6kwSvD-HfKBCKlHOAdgMndoFEda47mrj35Glz1v7OVgFcv2RhxKPWCOkcynMIwLDpDyCjj1k_1zr_LtAuaDgrLKJVz0h5Khj7122_7b0H2kypMDzGOp5fqATdKt5KeS3PzkawZENeH0="  # üîÅ –í–°–¢–ê–í–¨ –°–Æ–î–ê –ü–û–õ–ù–´–ô session_string

client = TelegramClient(StringSession(session_string), api_id, api_hash)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Å–æ–ª–∏
console = Console()

def show_banner():
    try:
        with open("ascii-art.txt", "r", encoding="utf-8") as f:
            ascii_art = f.read()
        console.print(Text(ascii_art, style="bold magenta"))
    except FileNotFoundError:
        console.print("ASCII –∞—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª ascii-art.txt –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ.", style="bold red")
    console.print("powered by ZYAMA", style="bold magenta")

def format_data(label, value):
    if value:
        return f"[+] {label}: {value}"
    return ""

profile = {
    "–§–ò–û": None,
    "–ì–æ—Ä–æ–¥": None,
    "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞": None,
    "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è": None,
    "–ê–¥—Ä–µ—Å": None,
    "–ü–∞—Å–ø–æ—Ä—Ç": None,
    "–°–ù–ò–õ–°": None,
    "TG": None,
    "VK": None,
    "OK": None,
    "TT": None,
    "–§–û–¢–û": None,
    "–¶–µ–ª—å": None
}

def input_profile():
    console.print("\n[bold cyan]–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:[/bold cyan]")
    profile["–¶–µ–ª—å"] = input("–ö—Ç–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∞–º–∞, –ø–∞–ø–∞, —Å–∞–º): ")
    profile["–§–ò–û"] = input("–§–ò–û: ")
    profile["–ì–æ—Ä–æ–¥"] = input("–ì–æ—Ä–æ–¥: ")
    profile["–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"] = input("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ")
    profile["–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è"] = input("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è (–¥–¥.–º–º.–≥–≥–≥–≥): ")
    profile["–ê–¥—Ä–µ—Å"] = input("–ê–¥—Ä–µ—Å: ")
    profile["–ü–∞—Å–ø–æ—Ä—Ç"] = input("–°–µ—Ä–∏—è –∏ –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞: ")
    profile["–°–ù–ò–õ–°"] = input("–°–ù–ò–õ–°: ")
    profile["TG"] = input("TG: ")
    profile["VK"] = input("VK: ")
    profile["OK"] = input("OK: ")
    profile["TT"] = input("TT: ")
    profile["–§–û–¢–û"] = input("–§–û–¢–û: ")
    console.print("\n[bold green]–î–∞–Ω–Ω—ã–µ —á–µ–ª–æ–≤–µ–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã![/bold green]\n")
    show_profile()

def show_profile():
    if not any(profile.values()):
        console.print("\n[bold red]–î–∞–Ω–Ω—ã–µ —á–µ–ª–æ–≤–µ–∫–∞ –µ—â—ë –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.[/bold red]")
        return
    console.print(f"\n[bold green]{profile['–¶–µ–ª—å'].upper()}[/bold green]")
    for key, value in profile.items():
        if key != "–¶–µ–ª—å":
            line = format_data(key, value)
            if line:
                console.print(line)

async def sherlock_phone_lookup(phone: str):
    await client.start()
    entity = await client.get_entity("@osinthelper123_bot")
    await client.send_message(entity=entity, message=phone)
    await asyncio.sleep(4)  # –ü–æ–¥–æ–∂–¥–∏ –æ—Ç–≤–µ—Ç
    history = await client(GetHistoryRequest(
        peer=entity,
        limit=1,
        offset_date=None,
        offset_id=0,
        max_id=0,
        min_id=0,
        add_offset=0,
        hash=0
    ))
    return history.messages[0].message

def search_menu():
    console.clear()
    show_banner()
    console.print("\n[bold cyan]–ú–µ–Ω—é –ø–æ–∏—Å–∫–∞:[/bold cyan]")
    console.print("[1] –ü–æ–∏—Å–∫ –ø–æ Telegram Username")
    console.print("[2] –ü–æ–∏—Å–∫ –ø–æ Telegram ID")
    console.print("[3] –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
    console.print("[4] –ü–æ–∏—Å–∫ –ø–æ email")
    console.print("[5] –ü–æ–∏—Å–∫ –°–æ—Ü. –°–µ—Ç–µ–π –ø–æ –Ω–∏–∫—É")
    console.print("[0] –ù–∞–∑–∞–¥")

    choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞: ")

    if choice == "0":
        return
    elif choice == "3":
        phone = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ +79991234567): ")
        if not phone.startswith("+7") and not phone.startswith("8"):
            console.print("[bold red]–§–æ—Ä–º–∞—Ç –Ω–µ–≤–µ—Ä–µ–Ω. –ù–∞—á–∏–Ω–∞–π —Å +7 –∏–ª–∏ 8.[/bold red]")
            return
        try:
            console.print("[bold cyan]–ó–∞–ø—Ä–æ—Å –∫ Sherlock...[/bold cyan]")
            result = asyncio.run(sherlock_phone_lookup(phone))
            if "–ù–µ –Ω–∞–π–¥–µ–Ω–æ" in result:
                console.print(f"\n[bold red]–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è {phone}.[/bold red]")
            else:
                console.print(f"\n[bold green]–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è {phone}:[/bold green]")
                console.print(result)
        except Exception as e:
            console.print(f"[bold red]–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e}[/bold red]")
    else:
        console.print("\n[bold red]–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä![/bold red]")

    input("\n[–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...]")
    search_menu()

def main_menu():
    while True:
        show_banner()
        console.print("\n[bold cyan]–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:[/bold cyan]")
        console.print("[1] –ü–æ–∏—Å–∫")
        console.print("[2] GeoOSINT")
        console.print("[3] –°–Ω–æ—Å –∞–∫–∫–∞—É–Ω—Ç–∞")
        console.print("[4] –í–≤–æ–¥ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
        console.print("[5] –í—ã—Ö–æ–¥")

        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç: ")

        if choice == "1":
            search_menu()
        elif choice == "2":
            console.print("\n[bold red]–§—É–Ω–∫—Ü–∏—è GeoOSINT –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.[/bold red]")
        elif choice == "3":
            console.print("\n[bold red]–§—É–Ω–∫—Ü–∏—è –°–Ω–æ—Å –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.[/bold red]")
        elif choice == "4":
            input_profile()
        elif choice == "5":
            console.print("\n[bold red]–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã...[/bold red]")
            break
        else:
            console.print("[bold red]–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä![/bold red]")

        input("\n[–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é...]")

if __name__ == "__main__":
    main_menu()
